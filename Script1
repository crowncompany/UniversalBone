local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "CrownCheats - (Driving Empire Script)  ",
    SubTitle = "By ashy1828, monstraa",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "archive-restore" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "👑 CrownCheats 👑",
        SubContent = "Driving Empire",
        Duration = 5
    })

    Tabs.Main:AddParagraph({
        Title = "Welcome to The Driving Empire Script❗",
        Content = "By ashy1828, And a Tiny Bit of monstraa"
    })

    Tabs.Settings:AddParagraph({
        Title = "🌐 Credits & Info 🌐",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "👑 Crown Cheats 👑",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "📝 Script 📝 : Driving Empire",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "By : ashy1828, monstra",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "UI : Fluent",
        Content = ""
    })
    Tabs.Settings:AddParagraph({
        Title = "v1.0.2",
        Content = ""
    })
end

-- ESP Toggle
local espToggle = Tabs.Main:AddToggle("UniversalESP", {
    Title = "Enable ESP",
    Default = false
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer

-- Constants
local HIGHLIGHT_NAME = "UniversalESP_Highlight"
local NAME_TAG_NAME = "UniversalESP_NameTag"
local BOX_NAME = "UniversalESP_Box"
local DISTANCE_TAG_NAME = "UniversalESP_Distance"

-- UI/Visual settings
local FILL_TRANSPARENCY = 0.75
local OUTLINE_TRANSPARENCY = 0

local NAME_COLOR = Color3.fromRGB(255, 255, 255)
local NAME_FONT = Enum.Font.Gotham
local HEALTH_BAR_COLOR = Color3.fromRGB(0, 255, 0)

-- Rainbow cycle
local hue = 0
local rainbowSpeed = 0.5
local espEnabled = false
local colorCycleConnection
local playerAddedConnection

local MAX_DISTANCE = 500

local function updateVisibility(character, distance)
    local shouldHide = distance > MAX_DISTANCE
    local distanceRatio = math.clamp(distance / MAX_DISTANCE, 0, 1)
    local scaleFactor = math.clamp(1 - distanceRatio * 0.75, 0.25, 1)

    local highlight = character:FindFirstChild(HIGHLIGHT_NAME)
    if highlight then
        highlight.Enabled = not shouldHide
        highlight.FillTransparency = FILL_TRANSPARENCY + (distanceRatio * 0.25)
        highlight.OutlineTransparency = OUTLINE_TRANSPARENCY + (distanceRatio * 0.5)
    end

    local nameTag = character:FindFirstChild(NAME_TAG_NAME)
    if nameTag then
        nameTag.Enabled = not shouldHide
        nameTag.Size = UDim2.new(0, 100 * scaleFactor, 0, 40 * scaleFactor)

        local nameLabel = nameTag:FindFirstChildOfClass("TextLabel")
        if nameLabel then
            nameLabel.TextSize = 12 * scaleFactor
        end

        local healthBg = nameTag:FindFirstChildOfClass("Frame")
        if healthBg then
            healthBg.Size = UDim2.new(1, 0, 0, 6 * scaleFactor)

            local healthFill = healthBg:FindFirstChild("HealthFill")
            if healthFill then
                healthFill.Visible = not shouldHide
            end
        end
    end

    local distanceTag = character:FindFirstChild(DISTANCE_TAG_NAME)
    if distanceTag then
        distanceTag.Enabled = not shouldHide
        distanceTag.Size = UDim2.new(0, 100 * scaleFactor, 0, 20 * scaleFactor)

        local label = distanceTag:FindFirstChildOfClass("TextLabel")
        if label then
            label.TextSize = 14 * scaleFactor
        end
    end
end

local function applyHighlight(character)
    if character:FindFirstChild(HIGHLIGHT_NAME) then return end

    local highlight = Instance.new("Highlight")
    highlight.Name = HIGHLIGHT_NAME
    highlight.Adornee = character
    highlight.FillColor = Color3.fromHSV(hue, 1, 1)
    highlight.FillTransparency = FILL_TRANSPARENCY
    highlight.OutlineColor = Color3.fromHSV(hue, 1, 1)
    highlight.OutlineTransparency = OUTLINE_TRANSPARENCY
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = character
end

local function createNameAndHealthTag(character, player)
    if character:FindFirstChild(NAME_TAG_NAME) then return end

    local head = character:FindFirstChild("Head")
    if not head then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = NAME_TAG_NAME
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 100, 0, 40)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.LightInfluence = 0
    billboard.MaxDistance = math.huge

    local healthBg = Instance.new("Frame")
    healthBg.Size = UDim2.new(1, 0, 0, 6)
    healthBg.Position = UDim2.new(0, 0, 0, 0)
    healthBg.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    healthBg.BorderSizePixel = 0
    healthBg.Parent = billboard

    local healthFill = Instance.new("Frame")
    healthFill.Name = "HealthFill"
    healthFill.Size = UDim2.new(1, 0, 1, 0)
    healthFill.BackgroundColor3 = HEALTH_BAR_COLOR
    healthFill.BorderSizePixel = 0
    healthFill.Parent = healthBg

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 0, 20)
    nameLabel.Position = UDim2.new(0, 0, 0, 10)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = NAME_COLOR
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    nameLabel.Font = NAME_FONT
    nameLabel.TextScaled = false
    nameLabel.TextSize = 12
    nameLabel.TextWrapped = true
    nameLabel.Parent = billboard

    billboard.Parent = character

    RunService.RenderStepped:Connect(function()
        if character and character:FindFirstChild("Humanoid") and healthFill then
            local hp = character.Humanoid.Health
            local maxHp = character.Humanoid.MaxHealth
            if maxHp > 0 then
                healthFill.Size = UDim2.new(math.clamp(hp / maxHp, 0, 1), 0, 1, 0)
            end
        end

        if character and character:FindFirstChild("HumanoidRootPart") and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
            updateVisibility(character, dist)
        end
    end)
end

local function applyHitboxBox(character)
    if character:FindFirstChild(BOX_NAME) then return end

    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local hitboxPart = Instance.new("Part")
    hitboxPart.Name = BOX_NAME
    hitboxPart.Anchored = true
    hitboxPart.CanCollide = false
    hitboxPart.Transparency = 1
    hitboxPart.Size = Vector3.new(6, 7, 3)
    hitboxPart.CFrame = hrp.CFrame
    hitboxPart.Parent = character
end

local function createDistanceIndicator(character, player)
    if character:FindFirstChild(DISTANCE_TAG_NAME) then return end

    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = DISTANCE_TAG_NAME
    billboard.Adornee = hrp
    billboard.Size = UDim2.new(0, 100, 0, 20)
    billboard.StudsOffset = Vector3.new(0, -2.5, 0)
    billboard.AlwaysOnTop = true
    billboard.LightInfluence = 0
    billboard.MaxDistance = math.huge

    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(1, 0, 1, 0)
    text.BackgroundTransparency = 1
    text.TextColor3 = Color3.fromRGB(255, 255, 255)
    text.TextStrokeTransparency = 0
    text.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    text.Font = NAME_FONT
    text.TextScaled = false
    text.TextSize = 14
    text.Text = "Distance"
    text.Parent = billboard

    billboard.Parent = character

    RunService.RenderStepped:Connect(function()
        if character and character:FindFirstChild("HumanoidRootPart") and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
            text.Text = string.format("%.1f meters", dist)
            updateVisibility(character, dist)
        end
    end)
end

local function applyESPToPlayer(player)
    if player == localPlayer or not espEnabled then return end

    local function onCharacterAdded(character)
        repeat task.wait() until character:IsDescendantOf(workspace)

        if espEnabled then
            applyHighlight(character)
            createNameAndHealthTag(character, player)
            applyHitboxBox(character)
            createDistanceIndicator(character, player)
        end
    end

    if player.Character then
        onCharacterAdded(player.Character)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
end

local function startRainbowCycle()
    colorCycleConnection = RunService.RenderStepped:Connect(function(dt)
        if not espEnabled then return end

        hue = (hue + dt * rainbowSpeed) % 1
        local color = Color3.fromHSV(hue, 1, 1)

        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= localPlayer and player.Character then
                local highlight = player.Character:FindFirstChild(HIGHLIGHT_NAME)
                if highlight then
                    highlight.FillColor = color
                    highlight.OutlineColor = color
                end
            end
        end
    end)
end

local function enableESP()
    if espEnabled then return end

    espEnabled = true

    for _, player in ipairs(Players:GetPlayers()) do
        applyESPToPlayer(player)
    end

    playerAddedConnection = Players.PlayerAdded:Connect(function(player)
        applyESPToPlayer(player)
    end)

    startRainbowCycle()
end

local function disableESP()
    if not espEnabled then return end

    if colorCycleConnection then
        colorCycleConnection:Disconnect()
        colorCycleConnection = nil
    end

    if playerAddedConnection then
        playerAddedConnection:Disconnect()
        playerAddedConnection = nil
    end

    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then
            local character = player.Character
            local highlight = character:FindFirstChild(HIGHLIGHT_NAME)
            if highlight then highlight:Destroy() end

            local nameTag = character:FindFirstChild(NAME_TAG_NAME)
            if nameTag then nameTag:Destroy() end

            local distanceTag = character:FindFirstChild(DISTANCE_TAG_NAME)
            if distanceTag then distanceTag:Destroy() end
        end
    end

    espEnabled = false
end

espToggle:OnChanged(function(val)
    if val then
        enableESP()
    else
        disableESP()
    end
end)
-- Direction Arrows Toggle
local ArrowsToggle = Tabs.Main:AddToggle("EnableArrows", {
    Title = "Enable Direction Arrows",
    Default = false
})

local MAX_DISTANCE = 400 -- studs
local RING_RADIUS = 100 -- pixels from crosshair

local screenGui = Instance.new("ScreenGui", localPlayer:WaitForChild("PlayerGui"))
screenGui.Name = "DirectionArrows"

local center = Instance.new("Frame")
center.Size = UDim2.new(0, 10, 0, 10)
center.Position = UDim2.new(0.5, -5, 0.5, -5)
center.BackgroundTransparency = 1
center.Name = "Center"
center.Parent = screenGui

local arrows = {}
local renderConnection

local function createArrow(targetPlayer)
    local arrow = Instance.new("ImageLabel")
    arrow.Size = UDim2.new(0, 30, 0, 30)
    arrow.BackgroundTransparency = 1
    arrow.Image = "rbxassetid://6031091002"
    arrow.ImageColor3 = Color3.fromRGB(237,29,36)
    arrow.AnchorPoint = Vector2.new(0.5, 0.5)
    arrow.Parent = screenGui
    arrows[targetPlayer] = arrow
end

local function removeArrow(targetPlayer)
    if arrows[targetPlayer] then
        arrows[targetPlayer]:Destroy()
        arrows[targetPlayer] = nil
    end
end

Players.PlayerRemoving:Connect(function(leavingPlayer)
    removeArrow(leavingPlayer)
end)

local function updateArrows()
    local myChar = localPlayer.Character
    if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return end
    local myPos = myChar.HumanoidRootPart.Position
    local camCF = workspace.CurrentCamera.CFrame

    local screenCenter = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= localPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local otherPos = otherPlayer.Character.HumanoidRootPart.Position
            local distance = (otherPos - myPos).Magnitude

            if distance <= MAX_DISTANCE then
                if not arrows[otherPlayer] then
                    createArrow(otherPlayer)
                end

                local arrow = arrows[otherPlayer]
                local relativeDir = (otherPos - myPos).Unit
                local camSpaceDir = camCF:VectorToObjectSpace(relativeDir)
                local flatDir = Vector2.new(camSpaceDir.X, -camSpaceDir.Y).Unit
                local angle = math.atan2(flatDir.Y, flatDir.X)

                local arrowPos = screenCenter + flatDir * RING_RADIUS
                arrow.Position = UDim2.new(0, arrowPos.X, 0, arrowPos.Y)
                arrow.Rotation = math.deg(angle) + 180
            else
                removeArrow(otherPlayer)
            end
        else
            removeArrow(otherPlayer)
        end
    end
end

ArrowsToggle:OnChanged(function(val)
    if val then
        -- Enable direction arrows
        renderConnection = RunService.RenderStepped:Connect(updateArrows)
    else
        -- Disable direction arrows
        if renderConnection then
            renderConnection:Disconnect()
        end
        for _, arrow in pairs(arrows) do
            arrow:Destroy()
        end
        arrows = {}
    end
end)

-- Addons and UI Management
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Crown Cheats",
    Content = "Driving Empire Script Has Loaded Successfully!",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
